<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: mono | SushiHangover]]></title>
  <link href="http://sushihangover.github.io/blog/categories/mono/atom.xml" rel="self"/>
  <link href="http://sushihangover.github.io/"/>
  <updated>2018-06-07T17:24:31-07:00</updated>
  <id>http://sushihangover.github.io/</id>
  <author>
    <name><![CDATA[RobertN]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Debugging MSBuild/Xbuild Task with Xamarin Studio]]></title>
    <link href="http://sushihangover.github.io/debugging-msbuild-slash-xbuild-task-with-xamarin-studio/"/>
    <updated>2016-12-24T17:55:03-08:00</updated>
    <id>http://sushihangover.github.io/debugging-msbuild-slash-xbuild-task-with-xamarin-studio</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sharpen - Part 3]]></title>
    <link href="http://sushihangover.github.io/sharpen-part-3/"/>
    <updated>2016-09-25T13:12:19-07:00</updated>
    <id>http://sushihangover.github.io/sharpen-part-3</id>
    <content type="html"><![CDATA[<h2>Sharpen</h2>

<p>Part 1: <a href="http://sushihangover.github.io/sharpen/">The correct Java version</a></p>

<p>Part 2: <a href="http://sushihangover.github.io/sharpen-part-2/">Building Sharpen</a></p>

<h3>Sharpen Support Classes:</h3>

<p>Converting your Java classes using the default config from <a href="https://github.com/ydanila">ydanila</a> you might want to look at the Sharpen support classes from <a href="https://github.com/mono/ngit"><code>ngit</code></a>:</p>

<ul>
<li><p><a href="https://github.com/mono/ngit/tree/master/Sharpen">https://github.com/mono/ngit/tree/master/Sharpen</a></p></li>
<li><p><a href="https://github.com/mono/ngit/tree/master/Sharpen.Unix">https://github.com/mono/ngit/tree/master/Sharpen.Unix</a></p></li>
</ul>


<h3>Type.FullName:</h3>

<pre><code>Sharpen.AccessController
Sharpen.AList`1
Sharpen.Arrays
Sharpen.AtomicInteger
Sharpen.AtomicLong
Sharpen.AtomicReference`1
Sharpen.AtomicReferenceArray`1
Sharpen.BufferedInputStream
Sharpen.BufferedOutputStream
Sharpen.BufferedReader
Sharpen.ByteArrayInputStream
Sharpen.ByteArrayOutputStream
Sharpen.Callable`1
Sharpen.CharBuffer
Sharpen.CharsetDecoder
Sharpen.CharsetEncoder
Sharpen.CodingErrorAction
Sharpen.Collections`1
Sharpen.Collections
Sharpen.ConcurrentHashMap`2
Sharpen.ConcurrentMap`2
Sharpen.CopyOnWriteArrayList`1
Sharpen.CountDownLatch
Sharpen.CRC32
Sharpen.CyclicBarrier
Sharpen.DataConverter
Sharpen.DataConverter+PackContext
Sharpen.DataConverter+CopyConverter
Sharpen.DataConverter+SwapConverter
Sharpen.DeflaterOutputStream
Sharpen.EnumerableWrapper`1
Sharpen.EnumeratorWrapper`1
Sharpen.Executors
Sharpen.FixedThreadPoolExecutorService
Sharpen.FutureBase
Sharpen.TaskFuture`1
Sharpen.CancellationException
Sharpen.RejectedExecutionException
Sharpen.ExecutorService
Sharpen.Extensions
Sharpen.FileChannel
Sharpen.FileChannel+MapMode
Sharpen.FileInputStream
Sharpen.FileLock
Sharpen.FileOutputStream
Sharpen.FileReader
Sharpen.FileWriter
Sharpen.Future`1
Sharpen.GZIPInputStream
Sharpen.GZIPOutputStream
Sharpen.InflaterInputStream
Sharpen.InheritableThreadLocal`1
Sharpen.InputStreamReader
Sharpen.LinkageError
Sharpen.LinkedHashMap`2
Sharpen.ListIterator`1
Sharpen.MappedByteBuffer
Sharpen.Matcher
Sharpen.MessageFormat
Sharpen.ObjectInputStream
Sharpen.ObjectOutputStream
Sharpen.OutputStreamWriter
Sharpen.Pattern
Sharpen.PipedInputStream
Sharpen.PipedOutputStream
Sharpen.PrintWriter
Sharpen.PrivilegedAction`1
Sharpen.RandomAccessFile
Sharpen.ReentrantLock
Sharpen.Reference`1
Sharpen.ReferenceQueue`1
Sharpen.Runtime
Sharpen.Runtime+ShutdownHook
Sharpen.SimpleDateFormat
Sharpen.SingletonList
Sharpen.SoftReference`1
Sharpen.SynchronizedList`1
Sharpen.Thread
Sharpen.ThreadGroup
Sharpen.TimeUnit
Sharpen.TimeUnitExtensions
Sharpen.WrappedSystemStream
Sharpen.AbstractCollection`1
Sharpen.AbstractList`1
Sharpen.AbstractList`1+SimpleIterator
Sharpen.AbstractMap`2
Sharpen.AbstractSet`1
Sharpen.Authenticator
Sharpen.ByteBuffer
Sharpen.ByteOrder
Sharpen.CharSequence
Sharpen.StringCharSequence
Sharpen.DigestOutputStream
Sharpen.EnumSet
Sharpen.EnumSet`1
Sharpen.VirtualMachineError
Sharpen.StackOverflowError
Sharpen.BrokenBarrierException
Sharpen.BufferUnderflowException
Sharpen.CharacterCodingException
Sharpen.DataFormatException
Sharpen.EOFException
Sharpen.Error
Sharpen.ExecutionException
Sharpen.InstantiationException
Sharpen.InterruptedIOException
Sharpen.MissingResourceException
Sharpen.NoSuchAlgorithmException
Sharpen.NoSuchElementException
Sharpen.NoSuchMethodException
Sharpen.OverlappingFileLockException
Sharpen.ParseException
Sharpen.RuntimeException
Sharpen.StringIndexOutOfBoundsException
Sharpen.UnknownHostException
Sharpen.UnsupportedEncodingException
Sharpen.URISyntaxException
Sharpen.ZipException
Sharpen.GitException
Sharpen.ConnectException
Sharpen.KeyManagementException
Sharpen.IllegalCharsetNameException
Sharpen.UnsupportedCharsetException
Sharpen.Executor
Sharpen.FilenameFilter
Sharpen.FilePath
Sharpen.FilterInputStream
Sharpen.FilterOutputStream
Sharpen.InputStream
Sharpen.Iterable`1
Sharpen.Iterator
Sharpen.Iterator`1
Sharpen.MessageDigest
Sharpen.MessageDigest`1
Sharpen.OutputStream
Sharpen.PasswordAuthentication
Sharpen.ResourceBundle
Sharpen.Runnable
Sharpen.TreeSet`1
Sharpen.LinkedHashSet`1
Sharpen.ProxySelector
Sharpen.Proxy
Sharpen.URLConnection
Sharpen.HttpsURLConnection
Sharpen.HttpURLConnection
Sharpen.URLEncoder
Sharpen.BitSet
Sharpen.Channels
Sharpen.BufferedWriter
Sharpen.X509TrustManager
Sharpen.X509Certificate
Sharpen.TrustManager
Sharpen.SSLContext
Sharpen.AtomicBoolean
Sharpen.ScheduledThreadPoolExecutor
Sharpen.ScheduledThreadPoolExecutor+Task`1
Sharpen.IScheduledITask
Sharpen.Scheduler
Sharpen.ThreadFactory
Sharpen.ThreadPoolExecutor
Sharpen.RunnableAction
Sharpen.JavaWeakReference`1
Sharpen.SystemProcess
Sharpen.DateFormat
Sharpen.DigestInputStream
Sharpen.FileHelper
Sharpen.JavaCalendar
Sharpen.JavaGregorianCalendar
&lt;PrivateImplementationDetails&gt;
&lt;PrivateImplementationDetails&gt;+$ArrayType=1024
Sharpen.FixedThreadPoolExecutorService+&lt;Submit&gt;c__AnonStorey0`1
Sharpen.Extensions+&lt;ContainsAll&gt;c__AnonStorey0`2
Sharpen.Extensions+&lt;Contains&gt;c__AnonStorey1`1
Sharpen.LinkedHashMap`2+&lt;Put&gt;c__AnonStorey0
Sharpen.LinkedHashMap`2+&lt;Remove&gt;c__AnonStorey1
Sharpen.AbstractMap`2+&lt;ContainsKey&gt;c__AnonStorey0
Sharpen.AbstractMap`2+&lt;Get&gt;c__AnonStorey1
Sharpen.Scheduler+&lt;HasTasks&gt;c__AnonStorey0
</code></pre>

<h3>Via:</h3>

<pre><code>Assembly assembly = Assembly.ReflectionOnlyLoad("Sharpen");
foreach (Type type in assembly.GetTypes())
{
   Console.WriteLine(type.FullName);
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sharpen - Part 2]]></title>
    <link href="http://sushihangover.github.io/sharpen-part-2/"/>
    <updated>2016-09-25T12:33:03-07:00</updated>
    <id>http://sushihangover.github.io/sharpen-part-2</id>
    <content type="html"><![CDATA[<h2>Sharpen Setup</h2>

<h3>Get Maven:</h3>

<pre><code>brew install maven
</code></pre>

<h3>Check Maven:</h3>

<pre><code>mvn --version

Apache Maven 3.3.9 (bb52d8502b132ec0a5a3f4c09453c07478323dc5; 2015-11-10T08:41:47-08:00)
Maven home: /usr/local/Cellar/maven/3.3.9/libexec
Java version: 1.8.0_92, vendor: Oracle Corporation
Java home: /Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre
Default locale: en_US, platform encoding: UTF-8
OS name: "mac os x", version: "10.11.6", arch: "x86_64", family: "mac"
</code></pre>

<h3>Clone the repo(s):</h3>

<pre><code>git clone https://github.com/mono/sharpen.git
git clone https://github.com/ydanila/sharpen_imazen_config.git
</code></pre>

<h3>Set your Java/JDK version to 1.7</h3>

<ul>
<li><a href="http://sushihangover.github.io/sharpen/">http://sushihangover.github.io/sharpen/</a></li>
</ul>


<h3>Build the Sharpen config:</h3>

<pre><code>pushd sharpen_imazen_config
mvn install
popd
</code></pre>

<p>Note: This is a sample config and a great starting point</p>

<h3>Build Sharpen</h3>

<h5>Note: Make sure that you are on the develop branch of Sharpen!</h5>

<pre><code>pushd sharpen
git checkout develop 
</code></pre>

<h4>Edit the <code>pom.xml</code> file so the cmd line <code>-help</code> option works:</h4>

<pre><code>git diff pom.xml

diff --git a/pom.xml b/pom.xml
index 1098a2d..4fedcbc 100644
--- a/pom.xml
+++ b/pom.xml
@@ -122,7 +122,7 @@
     &lt;testSourceDirectory&gt;src/test&lt;/testSourceDirectory&gt;
     &lt;resources&gt;
       &lt;resource&gt;
-        &lt;directory&gt;src/test/resources&lt;/directory&gt;
+        &lt;directory&gt;src/main/resources&lt;/directory&gt;
       &lt;/resource&gt;
     &lt;/resources&gt;
     &lt;testResources&gt;
</code></pre>

<p>mvn clean test
mvn install</p>

<h3>Running Sharpen:</h3>

<h4>Cmd line help:</h4>

<pre><code>java -jar ${PWD}/src/target/sharpencore-0.0.1-SNAPSHOT-jar-with-dependencies.jar -help     
</code></pre>

<h4>Convert Java to C# (with config)</h4>

<h5>Copy config:</h5>

<pre><code>cp ../sharpen_imazen_config/sharpen-all-options .
cp ../sharpen_imazen_config/sharpen.config/target/MEConfiguration.sharpenconfig .
</code></pre>

<h4>Run with config:</h4>

<pre><code>java -jar \
   ${PWD}/src/target/sharpencore-0.0.1-SNAPSHOT-jar-with-dependencies.jar \
   /Users/sushi/code/github/PlayScriptParser/src \
   -configurationClass \
   MEConfiguration.sharpenconfig-jar @sharpen-all-options

~~~
Configuration Class: sharpen.config.MEConfiguration
Configuration Class: Sharpen.Runtime
project: asc
Pascal case mode: NamespaceAndIdentifiers
Native type system mode on.
Separating interface constants to their own classes.
Organize usings mode on.
~~~
</code></pre>

<h4>Convert C# Location:</h4>

<p>Your converted C# classes will be located <strong>NEXT</strong> the original source directory, <code>/Users/sushi/code/github/PlayScriptParser</code>, in my case, the <strong>asc.net</strong> directory</p>

<pre><code>cd /Users/sushi/code/github/PlayScriptParser
ls -1
    asc.net
    build
    src
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sharpen]]></title>
    <link href="http://sushihangover.github.io/sharpen/"/>
    <updated>2016-09-25T10:44:44-07:00</updated>
    <id>http://sushihangover.github.io/sharpen</id>
    <content type="html"><![CDATA[<p>I needed to convert some Java code to C# and one of the best ways that I ever found is to use <code>Sharpen</code>. This used to be available as a Eclipse plugin but you can find a cli version at Mono&rsquo;s Github account:</p>

<ul>
<li><a href="https://github.com/mono/sharpen">https://github.com/mono/sharpen</a></li>
</ul>


<p>One of the <em>issues</em> in running Sharpen is that it requires Java 1.7, <strong>NOT 1.6, nor 1.8.</strong>.</p>

<p>So you need to have a Java 7 install. An easy way if you are already using homebrew, is available via a cask:</p>

<pre><code>brew install Caskroom/versions/java7
</code></pre>

<p>Note: If you get errors, make sure that your casks are updated, <code>brew upgrade brew-cask</code></p>

<h4>Current JDK:</h4>

<pre><code>/usr/libexec/java_home
/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home
</code></pre>

<h4>Get a list of Install JDKs:</h4>

<pre><code>ls -l1 /Library/Java/JavaVirtualMachines/
1.6.0.jdk
jdk1.7.0_71.jdk
jdk1.7.0_80.jdk
jdk1.8.0_92.jdk
</code></pre>

<h4>Export a &ldquo;new home&rdquo;:</h4>

<pre><code>export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.7.0_80.jdk/Contents/Home
</code></pre>

<p>Now I can build and run <code>sharpen</code>, i.e.:</p>

<pre><code>mvn clean test
mvn install
java -jar src/target/sharpencore-0.0.1-SNAPSHOT-jar-with-dependencies.jar /Users/sushi/github/PlayParser
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Adding nuget packages to your MonoDevelop Addin Templates]]></title>
    <link href="http://sushihangover.github.io/adding-nuget-packages-to-your-addin-templates/"/>
    <updated>2016-01-01T21:48:44-08:00</updated>
    <id>http://sushihangover.github.io/adding-nuget-packages-to-your-addin-templates</id>
    <content type="html"><![CDATA[<p>I recently created nugets for the PlayScript AOT assemblies as well as a separtate MSBuild target nuget and it ended up working really well in a x-plat way.</p>

<p>But one thing that I could not find quickly was how to tag my templates with the package info so they are automatically installed when the solution/projects are created.</p>

<p>Well the answer was kind-of right under my nose (<a href="https://en.wikipedia.org/wiki/RTFM">RTFM</a>):</p>

<blockquote><p>Conditionally Adding a NuGet Package from a Project Template
A NuGet package be conditionally installed based on a boolean parameter defined by the project template wizard.</p></blockquote>

<pre><code>&lt;Packages&gt;
    &lt;Package id="Xamarin.GooglePlayServices" version="19.0.0.1" if="UseGooglePlayServices" /&gt;
&lt;/Packages&gt;
</code></pre>

<blockquote><p>The conditions that can be specified do not support the more complicated condition that grouped templates do.</p></blockquote>

<p>Re: <a href="http://www.monodevelop.com/developers/articles/project-templates/#conditionally-adding-a-nuget-package-from-a-project-template">Conditionally Adding a NuGet Package from a Project Template</a></p>

<p>So in my templates I currently do not have to lock them to a version and want the most recent ones available so I skip the version attribute:</p>

<pre><code>&lt;Packages&gt;
    &lt;Package id="PlayScript.AOT" /&gt;
    &lt;package id="PlayScript.MSBuild" /&gt;
&lt;/Packages&gt;
</code></pre>
]]></content>
  </entry>
  
</feed>
