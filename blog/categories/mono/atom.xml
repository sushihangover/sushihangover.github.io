<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Mono | SushiHangover]]></title>
  <link href="http://sushihangover.github.io/blog/categories/mono/atom.xml" rel="self"/>
  <link href="http://sushihangover.github.io/"/>
  <updated>2015-06-09T10:35:43-07:00</updated>
  <id>http://sushihangover.github.io/</id>
  <author>
    <name><![CDATA[RobertN]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Mono - Libtool: Version Mismatch Error. This Is Libtool 2.4.6]]></title>
    <link href="http://sushihangover.github.io/mono-libtool-version-mismatch-error-this-is-libtool-2-dot-4-6/"/>
    <updated>2015-06-09T17:20:35-07:00</updated>
    <id>http://sushihangover.github.io/mono-libtool-version-mismatch-error-this-is-libtool-2-dot-4-6</id>
    <content type="html"><![CDATA[<p><img class="left <a" src="href="http://sushihangover.github.io/images/mono-logo.png">http://sushihangover.github.io/images/mono-logo.png</a>" title="" > If you are receiving the following error when compiling mono 4.x &ldquo;Version mismatch error.  This is libtool 2.4.6, but the definition of this LT_INIT comes from libtool 2.4.2.&rdquo;, then the aclocal.m4 file needs to be rebuilt. It appears something in the mono autogen/configure and/or make clean is not deleting and rebuilding it (or is picking an older libtool vs. actually using glibtool).</p>

<p>I have find that the &ldquo;ibgc/aclocal.m4&rdquo; has been my main problem:</p>

<pre><code> ....   
    make[4]: Nothing to be done for `all-am'.
    Making all in doc
    make[3]: Nothing to be done for `all'.
      CC       pthread_support.lo
    libtool: Version mismatch error.  This is libtool 2.4.6, but the
    libtool: definition of this LT_INIT comes from libtool 2.4.2.
    libtool: You should recreate aclocal.m4 with macros from libtool 2.4.6
    libtool: and run autoconf again.
    make[3]: *** [pthread_support.lo] Error 63
    make[2]: *** [all-recursive] Error 1
    make[1]: *** [all-recursive] Error 1
    make: *** [all] Error 2
</code></pre>

<p>Remove that file:</p>

<pre><code>rm libgc/aclocal.m4 
</code></pre>

<p>And re-run the make and it will be recreated correctly.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mono - Speeding Up Your Llvm Compile]]></title>
    <link href="http://sushihangover.github.io/mono-speeding-up-your-llvm-compile/"/>
    <updated>2015-06-09T07:42:41-07:00</updated>
    <id>http://sushihangover.github.io/mono-speeding-up-your-llvm-compile</id>
    <content type="html"><![CDATA[<p>If you are building llvm so you can then configure and build mono to use it, then you can speed up the compile by removing the tests as they take as long, if not longer, then the llvm runtime binaries.</p>

<p>I could not find a llvm configure option to skip the <strong>test</strong> directory, but you you just delete it (or move it out of the llvm directory) before you configure/compile llvm, then you will receive a warning that it was not find, but the compile will proceed normally.</p>

<p>Note: You could also mod the llvm configuration (configure/Makefile) to skip the tests.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mono - Using Llvm? Make Sure Your Targets Match]]></title>
    <link href="http://sushihangover.github.io/mono-using-llvm/"/>
    <updated>2015-06-09T07:21:58-07:00</updated>
    <id>http://sushihangover.github.io/mono-using-llvm</id>
    <content type="html"><![CDATA[<p>When configuring Mono to use llvm, if you receive the error:</p>

<p><strong>configure: error: Cross compiling is not supported for target i386-apple-darwin11.2.0</strong></p>

<p>Then the llvm-config that is currently the first hit in your path and that is begin picked up by the mono autogen/configure script is does not match the target that you are trying to build in mono.</p>

<p><strong>llvm-config &ndash;host-target</strong> should help you out and change your path so the correct llvm bin directory is first in the list so when mono&rsquo;s configure runs llvm-config it gets the correct info.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Stripping the Build Prefix From Cross-compiled Binaries]]></title>
    <link href="http://sushihangover.github.io/stripping-the-build-prefix-from-cross-compiled-b-binaries/"/>
    <updated>2015-06-09T06:14:24-07:00</updated>
    <id>http://sushihangover.github.io/stripping-the-build-prefix-from-cross-compiled-b-binaries</id>
    <content type="html"><![CDATA[<h2>Remove a filename prefix from a directory of files</h2>

<p>When cross-compiling and using the standard autogen/configure &ldquo;-build=&rdquo; option, you end up with binaries that have the arch prefix on your binaries. While this makes sense in order to distinguish that the binaries are different, there are times you do not want to deal with the issue of using these prefixes all the time.</p>

<p>Here is a simple script to strip those prefixes:</p>

<pre><code>#!/bin/bash
if [ -z "$1" ]
then
  prefix="i386-apple-darwin14.3.0-"
else
  prefix=$1
fi
for filename in `ls $prefix*`
do
   newfilename=${filename:${#prefix}}
   echo $filename $newfilename
   mv $filename $newfilename
done
</code></pre>

<p>I seem to be stripping &ldquo;i386-apple-darwin14.3.0-&rdquo; lately so that is the default if no prefix is passed as an argument&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OS-X 64-bit Mono : Midnight Commander]]></title>
    <link href="http://sushihangover.github.io/os-x-64-bit-mono-midnight-commander/"/>
    <updated>2015-06-08T18:43:29-07:00</updated>
    <id>http://sushihangover.github.io/os-x-64-bit-mono-midnight-commander</id>
    <content type="html"><![CDATA[<p><img src="/images/midnightcommander.png" alt="" /></p>

<p>In testing out 64-bit ncurses on OS-X, I grabbed the C# version of <a href="https://github.com/migueldeicaza/mc">Midnight Commander</a> to do some manual testing.</p>

<p>After tweaking the Makefile for PE32+ images, I ended up with a 64-bit exe, dll, and dylib:</p>

<pre><code>file *.exe *.dll *.dylib
mc.exe:               PE32+ executable for MS Windows (console) Mono/.Net assembly
mono-curses.dll:      PE32+ executable for MS Windows (DLL) (console) Mono/.Net/assembly
libmono-curses.dylib: Mach-O 64-bit dynamically linked shared library x86_64
</code></pre>

<p>There are some minor painting issues which I do not know if they are related to the arch type, OS-X or bugs in the actual C# code (mc or the ncurses wrapper), but overall it works very well.</p>
]]></content>
  </entry>
  
</feed>
