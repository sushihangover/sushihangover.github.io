<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Playscript | SushiHangover]]></title>
  <link href="http://sushihangover.github.io/blog/categories/playscript/atom.xml" rel="self"/>
  <link href="http://sushihangover.github.io/"/>
  <updated>2015-07-23T21:53:52-07:00</updated>
  <id>http://sushihangover.github.io/</id>
  <author>
    <name><![CDATA[RobertN]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Play Script Away3d World Global Example]]></title>
    <link href="http://sushihangover.github.io/playscript-away3d-world-global-example/"/>
    <updated>2015-07-23T18:17:12-07:00</updated>
    <id>http://sushihangover.github.io/playscript-away3d-world-global-example</id>
    <content type="html"><![CDATA[<p>I finally got all the bits together to get the OS-X OpenGL version of the <a href="http://playscriptredux.github.io">PlayScript</a> flash stage running the <a href="http://away3d.com">Away3d</a> 3D engine.</p>

<p>500 ActionScript files with over 20000 lines of actual code from <a href="https://github.com/PlayScriptRedux/away3d-core-fp11">away3d-core-fp11</a> and <a href="https://github.com/PlayScriptRedux/away3d-examples-fp11">away3d-examples-fp11</a> compiled to <a href="https://en.wikipedia.org/wiki/Common_Intermediate_Language">CIL</a> using the PlayScript mcs compiler. :-)</p>

<p>
<div class="ratio-4-3 embed-video-container" onclick="var myAnchor = document.getElementById('XlC93cXRlgI');var tmpDiv = document.createElement('div');tmpDiv.innerHTML = '&lt;iframe style=&quot;vertical-align:top;width:100%;height:100%;position:absolute;&quot; src=&quot;http://www.youtube.com/embed/XlC93cXRlgI?autoplay=1&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;';myAnchor.parentNode.replaceChild(tmpDiv.firstChild, myAnchor);return false;" title="click here to play">
<a class="youtube-lazy-link" style="width:100%;height:100%;background:#000 url(http://i2.ytimg.com/vi/XlC93cXRlgI/0.jpg) center center no-repeat;background-size:contain;position:absolute" href="http://www.youtube.com/watch?v=XlC93cXRlgI" id="XlC93cXRlgI" onclick="return false;">
<div class="youtube-lazy-link-div"></div>
<div class="youtube-lazy-link-info">Away3d Globe example running in PlayScript</div>
</a>
<div class="video-info" >Using PlayScript, the Actionscript compiler for Mono, to compile and run the Away3d core and Intermediate_Globe example within Xamarin Studio 5.9.x
PlayScript @ http://playscriptredux.github.io

PlayScript Source Code @ https://github.com/playscriptredux

Blogging @ http://sushihangover.github.io/

Royalty Free Background Music by Origen from: http://www.origenmusic.com/origen-licensing.html</div>
</div>

</p>

<p><a href="https://github.com/PlayScriptRedux/away3d-examples-fp11/blob/playscript/src/Intermediate_Globe.as">Away3d example source code that is running in the demo</a></p>

<pre><code>&gt;cloc away3d-core-fp11
     464 text files.
     464 unique files.
      16 files ignored.

http://cloc.sourceforge.net v 1.62  T=3.45 s (130.1 files/s, 23410.8 lines/s)
-------------------------------------------------------------------------------
Language                     files          blank        comment           code
-------------------------------------------------------------------------------
ActionScript                   443          12601          12443          54059
MSBuild script                   3              0              0           1551
C#                               3             39             11            111
-------------------------------------------------------------------------------
SUM:                           449          12640          12454          55721
-------------------------------------------------------------------------------
&gt;cloc away3d-examples-fp11
     110 text files.
     109 unique files.
      60 files ignored.

http://cloc.sourceforge.net v 1.62  T=5.05 s (10.5 files/s, 3247.7 lines/s)
-------------------------------------------------------------------------------
Language                     files          blank        comment           code
-------------------------------------------------------------------------------
ActionScript                    36           1936           2592           8073
Javascript                       2            121            148           1186
MSBuild script                   3              0              0            808
C#                               7            414             99            740
XML                              2             19             10            105
HTML                             2              7             29            102
CSS                              1              1              1              4
-------------------------------------------------------------------------------
SUM:                            53           2498           2879          11018
-------------------------------------------------------------------------------
</code></pre>

<p>Note: <a href="http://www.telestream.net/screenflow/overview.htm">ScreenFlow</a> is running on the background so the world rotation is a little choppy at times, without the screen/video capture running, the example runs at 60 fps @ 4% CPU on this old MacBookPro with a Intel Core 2 Duo 2.53 GHz processor.</p>

<p>FYI: ScreenFlow is a <strong>must</strong> have if you are screen capturing video on OS-X. It really is the <em>bomb</em> at what it does.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Play Script : Tests Are Now Structured Like Mono's]]></title>
    <link href="http://sushihangover.github.io/playscript-tests-are-now-structured-like-monos/"/>
    <updated>2015-07-16T20:08:45-07:00</updated>
    <id>http://sushihangover.github.io/playscript-tests-are-now-structured-like-monos</id>
    <content type="html"><![CDATA[<p>I <a href="https://github.com/PlayScriptRedux/playscript/pull/8">moved all the .play and .as tests</a> under the play_test directory. They are in two separtate dirs now, <strong>play</strong> for the extended PlayScript language/format and <strong>as</strong> for the standard ActionScript tests.</p>

<p>In doing this and making them conform to how Mono&rsquo;s compiler tests are written and run, I ended up copying the tools/compiler-tester to tools/playc-tester. The number of changes I was making to the program seems out of place to keep in within Mono&rsquo;s version and long term this will keep up with trying to keep any changes to the actual Mono code base at a minimun to allow faster and cleaner merging of their master branch. This tool will have very little commit activity compared to the mcs.exe/playc.exe compilers.</p>

<h3>Playc-tester.exe</h3>

<pre><code>mono playc-tester.exe
PlayScript compiler tester, (C) 2009 Novell, Inc. (C) SushiHangover/RobertN
playc-tester -mode:[pos|neg] -compiler:FILE -files:file-list [options]

   -compiler:FILE   The file which will be used to compiler tests
   -compiler-options:OPTIONS  Add global compiler options
   -il:IL-FILE      XML file with expected IL details for each test
   -issues:FILE     The list of expected failures
   -log:FILE        Writes any output also to the file
   -help            Lists all options
   -mode:[pos|neg]  Specifies compiler test mode
   -safe-execution  Runs compiled executables in separate app-domain
   -update-il       Updates IL-FILE to match compiler output
   -update-ref      Updates the debug xml to match debug compiler mdb output
   -verbose         Prints more details during testing
</code></pre>

<p>Example test run of the current as tests:</p>

<pre><code>make astest
~~~
./as/test-debug-015.as...   NOT TESTED
./as/test-debug-AllowDynamics.as... KNOWN ISSUE (Execution error)
./as/test-debug-DivideByZeroTest.as...      KNOWN ISSUE (Compilation error)
./as/test-debug-UntypedVariableTest.as...   KNOWN ISSUE (Compilation error)
Done

40 test cases passed (93.02%)
1 test(s) ignored
3 known issue(s)
</code></pre>

<p>With these changes and the addition of the playshell REPL in the last set of changes will allow the Tamarin Redux tests to start coming online. Then CI deployment will be the step after that.</p>

<p>As always <a href="https://github.com/PlayScriptRedux/playscript/issues">post</a> any isses that you find. ;-)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Play Script   Now Has A Repl (Playshell)]]></title>
    <link href="http://sushihangover.github.io/playscript-now-has-a-repl-playshell/"/>
    <updated>2015-07-15T06:35:49-07:00</updated>
    <id>http://sushihangover.github.io/playscript-now-has-a-repl-playshell</id>
    <content type="html"><![CDATA[<p>PlayScript now has a REPL for ActionScript scripting. This is very <strong>alpha</strong> right now and needs a lot of love. It will be used for running the <a href="http://hg.mozilla.org/tamarin-redux">Tamarin Redux</a> <a href="https://www.mozilla.org/projects/tamarin/">acceptance tests</a> so it will be evolving as those regression tests come online.</p>

<p>It is available in the <a href="https://github.com/PlayScriptRedux/playscript">master branch</a> : 17aac5473528370b96e3349751bd2a8a017e6779</p>

<p>Check it out and post any <a href="https://github.com/PlayScriptRedux/playscript/issues/new">issues</a> that you find.</p>

<pre><code>* Added playshell : This is a PlayScript REPL (aka: like csharp REPL)
  - For use with Tamarin Redux test; they use Asset scripts with a test package
  - Very alpha at this point
  - Need to add PlayScript style 'import'
* Added PsOnlyMode to compiler setting
  - Whether to enable PlayScript compiler only mode. Defaults to false.
* mcs.master.mdw : XS/MD Workspace that will hold Solutions for all mcs
  - Added tools/csharp and tools/playshell
* CSProj files updated via Make2CSProjUpdater to allow use in XS/MD:
  - Mono.PlayScript.csproj (and .sln)
  - Mono.CSharp.csproj (and .sln)
  - tools/charp.csproj (and .sln)
  - tools/playshell.csproj (and .sln)
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Play Script Redux   Make2 Cs Proj Updater]]></title>
    <link href="http://sushihangover.github.io/playscript-redux-make2csprojupdater/"/>
    <updated>2015-07-14T15:06:01-07:00</updated>
    <id>http://sushihangover.github.io/playscript-redux-make2csprojupdater</id>
    <content type="html"><![CDATA[<p><img class="left <a" src="href="http://sushihangover.github.io/images/PlayscriptLogo_small.png">http://sushihangover.github.io/images/PlayscriptLogo_small.png</a>"> I just posted a new tool project on <a href="https://github.com/PlayScriptRedux/Make2CSProjUpdater">Github</a> that I am using with Mono and PlayScript to make things easier with Xamarin Studio / MonoDevelop.</p>

<h2>Make2CSProjUpdater</h2>

<h4>Update the .csproj ItemGroup/Compile elements from a sourcefile list.</h4>

<p>This project takes a source list of file, usually from an external Makefile source (i.e. Mono.CSharp.dll.sources) and a C# (.csproj) project file and will update/sync the source list into the project file.</p>

<p>As an author of the <a href="http://github.com/playscriptredux/playscript">PlayScript Redux</a> project, there are a large number of Mono .csproj files that are not keep up to date with the Makefile source lists. The Makefile source lists are a known good source as they are used to build Mono and the project files are not used in that capicity. But in development and debugging of the Mono Compiler (mcs.exe) and PlayScript Compiler (playc.exe), the use of Xamarian Studio / MonoDevelop IDE makes life so much easier and thus the need for up to date project (.csproj) files. :-)</p>

<p>Note: This project is generic, just a text file containing a list of filenames and a .csproj file.</p>

<p>Note: Found another use; dumping a list of files via find/ls/etc. to a file and updating a blank project file with that source. This provided a quick jumpstart for a few projects that did not include project files or were so outdated that the project files had to be recreated.</p>

<h3>Usage:</h3>

<pre><code>make2csprojupdater.exe -h
Make2CSProjectUpdate / ©SushiHangover 2015
Update the .csproj ItemGroup/Compile elements from a sourcefile list.

Options:
  -p, --proj=VALUE           The project filename (.csproj) to update.
  -s, --sources=VALUE        The filename of the Makefile source list.
  -i, --interactive          Confirmation prompt to update/save the project
                               file.
  -v, --verbose              Increase message verbosity.
  -h, --help                 Show this message and exit
</code></pre>

<p>Sample Usage:</p>

<pre><code>  mono make2csprojupdater.exe -p Sample/Mono.CSharp.csproj -s Sample/Mono.CSharp.dll.sources -v -i
# Make source files : 68
# Project source files  : 58

# Project needs the following changes    : Sample/Mono.CSharp.csproj
# Delete:   ..\..\mcs\doc-bootstrap.cs
# Delete:   cs-parser.cs
# Delete:   ..\corlib\Mono.Security.Cryptography\CryptoConvert.cs
# Delete:   ..\Mono.CompilerServices.SymbolWriter\MonoSymbolFile.cs
# Delete:   ..\Mono.CompilerServices.SymbolWriter\MonoSymbolTable.cs
# Delete:   ..\Mono.CompilerServices.SymbolWriter\MonoSymbolWriter.cs
# Delete:   ..\Mono.CompilerServices.SymbolWriter\SourceMethodBuilder.cs
# Add:  ../../mcs/ps-lang.cs
# Add:  ../../mcs/ps-tokenizer.cs
# Add:  ../../mcs/ps-codegen.cs
# Add:  ../../mcs/cxx-emit.cs
# Add:  ../../mcs/cxx-target.cs
# Add:  ../../mcs/inliner.cs
# Add:  ../../mcs/intrinsics.cs
# Add:  ../../mcs/js-emit.cs
# Add:  ../../mcs/js-target.cs
# Add:  ../../class/Mono.CompilerServices.SymbolWriter/MonoSymbolFile.cs
# Add:  ../../class/Mono.CompilerServices.SymbolWriter/MonoSymbolTable.cs
# Add:  ../../class/Mono.CompilerServices.SymbolWriter/SourceMethodBuilder.cs
# Add:  ../../class/Mono.Security/Mono.Security.Cryptography/CryptoConvert.cs
# Add:  ../../build/common/Consts.cs
# Add:  ../../mcs/cs-parser.cs
# Add:  ../../mcs/ps-parser.cs
# Add:  Assembly/AssemblyInfo.cs

Make changes? [y/n]:y
# Saving backup:    Sample/Mono.CSharp.csproj.bak
# Deleting: ..\..\mcs\doc-bootstrap.cs
# Deleting: cs-parser.cs
# Deleting: ..\corlib\Mono.Security.Cryptography\CryptoConvert.cs
# Deleting: ..\Mono.CompilerServices.SymbolWriter\MonoSymbolFile.cs
# Deleting: ..\Mono.CompilerServices.SymbolWriter\MonoSymbolTable.cs
# Deleting: ..\Mono.CompilerServices.SymbolWriter\MonoSymbolWriter.cs
# Deleting: ..\Mono.CompilerServices.SymbolWriter\SourceMethodBuilder.cs
# Adding:   ../../mcs/ps-lang.cs
# Adding:   ../../mcs/ps-tokenizer.cs
# Adding:   ../../mcs/ps-codegen.cs
# Adding:   ../../mcs/cxx-emit.cs
# Adding:   ../../mcs/cxx-target.cs
# Adding:   ../../mcs/inliner.cs
# Adding:   ../../mcs/intrinsics.cs
# Adding:   ../../mcs/js-emit.cs
# Adding:   ../../mcs/js-target.cs
# Adding:   ../../class/Mono.CompilerServices.SymbolWriter/MonoSymbolFile.cs
# Adding:   ../../class/Mono.CompilerServices.SymbolWriter/MonoSymbolTable.cs
# Adding:   ../../class/Mono.CompilerServices.SymbolWriter/SourceMethodBuilder.cs
# Adding:   ../../class/Mono.Security/Mono.Security.Cryptography/CryptoConvert.cs
# Adding:   ../../build/common/Consts.cs
# Adding:   ../../mcs/cs-parser.cs
# Adding:   ../../mcs/ps-parser.cs
# Adding:   Assembly/AssemblyInfo.cs
# Saving project:   Sample/Mono.CSharp.csproj
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Play Script   Moved It A Github Organization]]></title>
    <link href="http://sushihangover.github.io/playscript-moved-it-a-github-organization/"/>
    <updated>2015-06-14T08:24:28-07:00</updated>
    <id>http://sushihangover.github.io/playscript-moved-it-a-github-organization</id>
    <content type="html"><![CDATA[<p><img class="left <a" src="href="http://sushihangover.github.io/images/PlayscriptLogo_small.png">http://sushihangover.github.io/images/PlayscriptLogo_small.png</a>">  I transfered my PlayScript repo to an Github organization to help maintain the structure of the project.</p>

<p>The new org is named <a href="https://github.com/PlayScriptRedux">PlayScriptRedux</a> and any forks should be made from there as it will be the master and now my personal PlayScript repo will also be a fork of that master.</p>

<p>I&rsquo;ll be (slowly) posting the other PlayScript related repo (Starling, Away3d, IDE add-ins, etc.) to the PlayScriptRedux as they are tested.</p>
]]></content>
  </entry>
  
</feed>
