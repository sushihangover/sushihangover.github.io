<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[SushiHangover]]></title>
  <link href="http://sushihangover.github.io/atom.xml" rel="self"/>
  <link href="http://sushihangover.github.io/"/>
  <updated>2015-11-05T17:00:41-08:00</updated>
  <id>http://sushihangover.github.io/</id>
  <author>
    <name><![CDATA[RobertN]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Nrefactory | Playscript & Actionscript]]></title>
    <link href="http://sushihangover.github.io/nrefactory-playscript-and-actionscript/"/>
    <updated>2015-11-05T16:51:17-08:00</updated>
    <id>http://sushihangover.github.io/nrefactory-playscript-and-actionscript</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://sushihangover.github.io/images/PlayscriptLogo_small.png"></p>

<p>I posted up the initial fork of <a href="https://github.com/icsharpcode/NRefactory">NRefactory</a> that replaces the parser with the <a href="https://github.com/PlayScriptRedux/playscript">PlayScript</a> mcs compiler to allow PlayScript &amp; ActionScript parsing. This will be used within the <a href="https://github.com/PlayScriptRedux/PlayScript.Addin">Xamarin Studio / MonoDevelop PlayScript Language Addin</a>.</p>

<p><img class="right" src="http://sushihangover.github.io/images/ICSharpCode.NRefactory.GtkDemo.png"></p>

<p>Fork and clone it and give the <code>ICSharpCode.NRefactory.GtkDemo</code> project a try.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Apt~File | Finding Packages By Searching Headers]]></title>
    <link href="http://sushihangover.github.io/apt-file-finding-packages-by-search-fing-headers/"/>
    <updated>2015-10-31T06:30:29-07:00</updated>
    <id>http://sushihangover.github.io/apt-file-finding-packages-by-search-fing-headers</id>
    <content type="html"><![CDATA[<h2>When you need a file or package and can&rsquo;t find it:</h2>

<h3>Use apt-file</h3>

<p>First, install <code>apt-file</code> and update it.</p>

<pre><code>sudo apt-get install apt-file
sudo apt-file update
</code></pre>

<p>You can search with <code>apt-file</code> needed files or packages.</p>

<pre><code>apt-file search curses.h
apt-file search panel.h
apt-file search iconv.h
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mono | Ubuntu Broken Packages]]></title>
    <link href="http://sushihangover.github.io/mono-ubuntu-broken/"/>
    <updated>2015-10-30T21:55:07-07:00</updated>
    <id>http://sushihangover.github.io/mono-ubuntu-broken</id>
    <content type="html"><![CDATA[<p><a href="http://www.mono-project.com"><img class="left" src="http://sushihangover.github.io/images/mono-logo.png"></a></p>

<p>I do not normally use a Linux Desktop, more of a CLI kind-of guy, but in trying to support some C# projects that are using MonoDevelop, I needed to get the beta/alpha Mono builds installed&hellip; It turns out to be a <a href="http://www.urbandictionary.com/define.php?term=pita&amp;page=1">P.I.T.A.</a> to do it from packages and not source.</p>

<p>Broken packages always seem to be a problem when dealing with pre-built Linux software and I usually build from source so I do not see them, but installing the <code>mono-devel</code> package fails due to <code>libjpeg62-turbo</code> and <code>libjpeg62</code> not being avialable in the normal Ubuntu repos. They have been replaced by bundle <code>8</code> of libraries but <code>libgdiplus</code> that Mono references is pinned to <code>libjpeg6*</code> packages&hellip;</p>

<h3>So the errors:</h3>

<pre><code>sudo apt-get install mono-devel
</code></pre>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>The following packages have unmet dependencies:
</span><span class='line'> mono-devel : Depends: libgdiplus (&gt;= 2.6.7) but it is not going to be installed
</span><span class='line'>              Depends: libmono-system-design4.0-cil (&gt;= 1.0) but it is not going to be installed
</span><span class='line'>              Depends: libmono-system-drawing4.0-cil (&gt;= 3.0.6) but it is not going to be installed
</span><span class='line'>              Depends: libmono-system-messaging4.0-cil (&gt;= 2.10.1) but it is not going to be installed
</span><span class='line'>              Depends: libmono-system-runtime4.0-cil (&gt;= 2.10.1) but it is not going to be installed
</span><span class='line'>              Depends: libmono-system-servicemodel-activation4.0-cil (&gt;= 1.0) but it is not going to be installed
</span><span class='line'>              Depends: libmono-system-servicemodel-web4.0-cil (&gt;= 3.2.1) but it is not going to be installed
</span><span class='line'>              Depends: libmono-system-servicemodel4.0a-cil (&gt;= 3.2.3) but it is not going to be installed
</span><span class='line'>              Depends: libmono-system-web-extensions4.0-cil (&gt;= 2.10.3) but it is not going to be installed
</span><span class='line'>              Depends: libmono-system-web-services4.0-cil (&gt;= 1.0) but it is not going to be installed
</span><span class='line'>              Depends: libmono-system-web4.0-cil (&gt;= 2.10.3) but it is not going to be installed
</span><span class='line'>              Depends: libmono-system-windows-forms4.0-cil (&gt;= 1.0) but it is not going to be installed
</span><span class='line'>              Depends: libmono-cil-dev (= 4.2.1.91-0xamarin1) but it is not going to be installed
</span><span class='line'>E: Unable to correct problems, you have held broken packages.</span></code></pre></td></tr></table></div></figure>


<pre><code>sudo apt-get install libgdiplus
</code></pre>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Reading package lists... Done
</span><span class='line'>Building dependency tree       
</span><span class='line'>Reading state information... Done
</span><span class='line'>Some packages could not be installed. This may mean that you have requested an impossible situation or if you are using the unstable
</span><span class='line'>distribution that some required packages have not yet been created
</span><span class='line'>or been moved out of Incoming.
</span><span class='line'>The following information may help to resolve the situation:
</span><span class='line'>The following packages have unmet dependencies:
</span><span class='line'>libgdiplus : Depends: libjpeg62-turbo (&gt;= 1.3.1) but it is not installable
</span><span class='line'>E: Unable to correct problems, you have held broken packages.</span></code></pre></td></tr></table></div></figure>


<pre><code>sudo apt-get install libjpeg62-turbo
</code></pre>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Reading package lists... Done
</span><span class='line'>Building dependency tree       
</span><span class='line'>Reading state information... Done
</span><span class='line'>Package libjpeg62-turbo is not available, but is referred to by another package.
</span><span class='line'>This may mean that the package is missing, has been obsoleted, or is only available from another source E: 
</span><span class='line'>Package 'libjpeg62-turbo' has no installation candidate</span></code></pre></td></tr></table></div></figure>


<h3>The Fix:</h3>

<h4>Get the older <code>libjpeg62-turbo</code> package:</h4>

<p><a href="http://pkgs.org/debian-sid/debian-main-amd64/libjpeg62-turbo_1.4.1-2_amd64.deb.html">libjpeg62-turbo - libjpeg-turbo JPEG runtime library</a></p>

<pre><code> wget http://ftp.br.debian.org/debian/pool/main/libj/libjpeg-turbo/libjpeg62-turbo_1.4.1-2_amd64.deb
</code></pre>

<h4>Get the older <code>libjpeg62</code> package:</h4>

<p><a href="http://pkgs.org/debian-sid/debian-main-amd64/libjpeg62_6b2-2_amd64.deb.html">libjpeg62 - Independent JPEG Group&rsquo;s JPEG runtime library (version 6.2)</a></p>

<pre><code> wget http://ftp.br.debian.org/debian/pool/main/libj/libjpeg6b/libjpeg62_6b2-2_amd64.deb
</code></pre>

<h4><a href="http://www.cyberciti.biz/faq/ubuntu-linux-how-do-i-install-deb-packages/">Install</a> the deb packages:</h4>

<pre><code>sudo dpkg --install --recursive --auto-deconfigure libjpeg62-turbo_1.4.1-2_amd64.deb 
</code></pre>

<h4>Update and fix the &lsquo;now broken&rsquo; dependencies:</h4>

<pre><code>apt-get update
sudo apt-get -f install
</code></pre>

<h4>Finally, install <code>mono</code> (and <code>monodevelop</code>) from package:</h4>

<pre><code>sudo apt-get install mono-devel
sudo apt-get isntall monodevelop
</code></pre>

<h4>Ahhh, <code>mono 4.2.1</code> is now installed:</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mono --version
</span><span class='line'>Mono JIT compiler version 4.2.1 (Stable 4.2.1.91/8862921 Fri Oct 30 17:04:13 UTC 2015)
</span><span class='line'>Copyright (C) 2002-2014 Novell, Inc, Xamarin Inc and Contributors. www.mono-project.com
</span><span class='line'>  TLS:           __thread
</span><span class='line'>  SIGSEGV:       altstack
</span><span class='line'>  Notifications: epoll
</span><span class='line'>  Architecture:  amd64
</span><span class='line'>  Disabled:      none
</span><span class='line'>  Misc:          softdebug 
</span><span class='line'>  LLVM:          supported, not enabled.
</span><span class='line'>  GC:            sgen</span></code></pre></td></tr></table></div></figure>


<p>Almost would be easier to install from source ;-)</p>

<p>Have fun.</p>

<p><a href="http://www.monodevelop.com"><img src="http://sushihangover.github.io/images/monodevelop.png"></a></p>

<p><a href="https://github.com/PlayScriptRedux/playscript"><img class="left" src="http://sushihangover.github.io/images/PlayscriptLogo_small.png"></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Play Script | Optimizing Psc/Mcs]]></title>
    <link href="http://sushihangover.github.io/playscript-exception-filters/"/>
    <updated>2015-10-27T22:20:18-07:00</updated>
    <id>http://sushihangover.github.io/playscript-exception-filters</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://sushihangover.github.io/images/PlayscriptLogo_small.png"></p>

<p><a href="http://ericlippert.com">Eric Lippert</a> has a couple of recent posts that I have been reviewing in conjuction with the PlayScript version of Mono&rsquo;s mcs (psc) as some of the things devs do in ActionScript 3.0 are targeted to making Flash&rsquo;s AVM run efficiently does not always make the cut for a C#/CLR oriented compiler. Many of these items revolve around arrays and vector and misuse of the generic (dynamic) Object types, but strings, associative operations, and nulls need some love also and his posts are very insightful as how C# is optimized in certain areas.</p>

<p><span class='pullquote-right' data-pullquote='including PowerShell DevOps'>
<strong>Great</strong> reading for any C#/CLR devs, including PowerShell DevOps that are bundling their custom C# written assemblies to speed up their PS modules.
</span></p>

<p><a href="http://ericlippert.com/2015/10/27/optimizing-associative-operations/">Optimizing associative operations</a></p>

<p><a href="http://ericlippert.com/2013/06/17/string-concatenation-behind-the-scenes-part-one/">String concatenation behind the scenes, part one</a></p>

<p><a href="http://ericlippert.com/2013/06/24/string-concatenation-behind-the-scenes-part-two/">String concatenation behind the scenes, part two</a></p>

<p>He also has a great series on Nullable micro-optimizations that start here:</p>

<p><a href="http://ericlippert.com/2012/12/20/nullable-micro-optimizations-part-one/">Nullable micro-optimizations, part one</a></p>

<p>PlayScript Github repo is <a href="https://github.com/PlayScriptRedux/playscript">here</a> check it out now!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mono's New Tls Provider]]></title>
    <link href="http://sushihangover.github.io/monos-new-tls-provider/"/>
    <updated>2015-10-26T23:10:57-07:00</updated>
    <id>http://sushihangover.github.io/monos-new-tls-provider</id>
    <content type="html"><![CDATA[<p>Great news, the new pluggable TLS provider is available for security review.</p>

<p><a href="http://mono.1490590.n4.nabble.com/Mono-s-new-TLS-provider-tt4666825.html">Mono’s new TLS provider</a></p>

<blockquote><p> Hello,</p>

<p>As described by Miguel in the “State of Tls in Mono” [1] we have been working on a new TLS implementation for Mono, one that would upgrade our TLS stack, and one that would allow us to reuse some of the higher level pieces from Microsoft’s networking stack, read that post for more details on the scope of the project.</p>

<p>Mono’s master branch now has the ability to load alternative TLS implementations.   We added this code so we can start testing our new TLS implementation side-by-side the code that is in use today, and also so that we can provide both platform-specific backends or allow developers to choose a different TLS implementation (like BoringSSL, OpenSSL or Amazon’s s2n).</p>

<p>This is achieved by making our SSL transport pluggable, this allows HttpWebRequest and other classes to use the new TLS stack.</p>

<p>Today, a regular Mono checkout will default to the existing Mono SSL/TLS implementation which supports a number of ciphers and TLS levels up to 1.0, so nothing has changed and we have one alternative implementation available: mono-tls.</p>

<p>mono-tls is a purely managed implementation of TLS 1.0, 1.1 and 1.2 (filling the gap that we had).   To use it, you need to build the mono-tls [2] module, once this is build, you will have to reference the following libraries: Mono.Security.NewTls, Mono.Security.NewTls.Interface, Mono.Security.Providers.NewTls.</p>

<p>Once you have these, you should add this code to your main program:</p>

<pre><code>  MonoTlsProviderFactory.InstallProvider (new NewTlsProvider ());
</code></pre>

<p>Then uses of HttpWebRequest, FtpWebRequest and the Smtp client will all use the new TLS stack.</p>

<p>More details are available in the architecture document [3].</p>

<p>TLS State
While we have added an extensive test suite to this new TLS implementation and tested this against a wide variety of TLS servers and configurations, we have not completed a security audit of its implementation.   While we have taken every step to ensure that we follow all the best practices when implementing a security stack, we want to get this code reviewed by third parties, and we want to complete a comprehensive security audit of the code before we would even consider transitioning this as the default.</p>

<p>Future Work - Pluggability/SslStream
We are going to be making the SslStream the proxy endpoint, for two reasons: (a) it would make SslStream usable with the new provider interface and (b) it would simplify some of the special code that lives in different places in the class libraries to use the new TLS implementation.</p>

<p>We will also likely introduce a MONO_TLS_PROVIDER environment variable that controls the implementation, so that we make it easier to test the implementations during the testing phase.</p>

<p>Future Work - Other Providers
We are currently developing a provider for Apple platforms that will use Apple’s unmanaged SSL implementation, and we will be adding an implementation that use Google’s BoringSSL.   The idea being that on Apple, you get to use the system provided implementation, and on other platforms, we use the Google maintained one.</p>

<p>Please let me know if you have any questions, comments, feedback.   In particular, we would like to get you to find security holes in the implementation.  We can offer a Xamarin shirt or a Xamarin monkey as a prize for finding holes in the new implementation.</p>

<p>References
[1] <a href="http://tirania.org/blog/archive/2015/Aug-27.html">http://tirania.org/blog/archive/2015/Aug-27.html</a>
[2] <a href="http://github.com/mono/mono-tls">http://github.com/mono/mono-tls</a>
[3] <a href="https://github.com/mono/mono-tls/blob/master/ARCHITECTURE.md">https://github.com/mono/mono-tls/blob/master/ARCHITECTURE.md</a></p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Star Wars: The Force Awakens Trailer | Official Hd]]></title>
    <link href="http://sushihangover.github.io/starswarsFA/"/>
    <updated>2015-10-19T16:12:50-07:00</updated>
    <id>http://sushihangover.github.io/starswarsFA</id>
    <content type="html"><![CDATA[

<div class="ratio-4-3 embed-video-container" onclick="var myAnchor = document.getElementById('gYA3WNdO4Bw');var tmpDiv = document.createElement('div');tmpDiv.innerHTML = '&lt;iframe style=&quot;vertical-align:top;width:100%;height:100%;position:absolute;&quot; src=&quot;http://www.youtube.com/embed/gYA3WNdO4Bw?autoplay=1&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;';myAnchor.parentNode.replaceChild(tmpDiv.firstChild, myAnchor);return false;" title="click here to play">
<a class="youtube-lazy-link" style="width:100%;height:100%;background:#000 url(http://i2.ytimg.com/vi/gYA3WNdO4Bw/0.jpg) center center no-repeat;background-size:contain;position:absolute" href="http://www.youtube.com/watch?v=gYA3WNdO4Bw" id="gYA3WNdO4Bw" onclick="return false;">
<div class="youtube-lazy-link-div"></div>
<div class="youtube-lazy-link-info">Star Wars: The Force Awakens Trailer | Official HD</div>
</a>
<div class="video-info" >Get your first look at the new Star Wars: The Force Awakens trailer!

Lucasfilm and visionary director J.J. Abrams join forces to take you back again to a galaxy far, far away as “Star Wars” returns to the big screen with “Star Wars: The Force Awakens.” 

Episode VII in the Star Wars Saga, Star Wars: The Force Awakens, opens in cinemas December 17, 2015.

Official Site: http://starwarsunitedkingdom.co.uk 

Subscribe to Star Wars on YouTube for more videos: https://www.youtube.com/StarWarsUK 
Like Star Wars on Facebook: https://www.facebook.com/StarWars.UK
Follow @StarWars on Twitter: @StarWarsUK
Follow @StarWars on Instagram: http://instagram.com/starwars
Follow Star Wars on Tumblr: http://starwars.tumblr.com/

Star Wars: The Force Awakens, directed by J.J. Abrams from a screenplay by Lawrence Kasdan & Abrams, features a cast including actors John Boyega, Daisy Ridley, Adam Driver, Oscar Isaac, Andy Serkis, Academy Award winner Lupita Nyong’o, Gwendoline Christie, Crystal Clarke, Pip Andersen, Domhnall Gleeson, and Max von Sydow. They will join the original stars of the saga, Harrison Ford, Carrie Fisher, Mark Hamill, Anthony Daniels, Peter Mayhew, and Kenny Baker.

The film is being produced by Kathleen Kennedy, J.J. Abrams, and Bryan Burk, and John Williams returns as the composer.</div>
</div>


<p><strong>Get your first look at the new Star Wars: The Force Awakens trailer!
</strong></p>

<p>Lucasfilm and visionary director J.J. Abrams join forces to take you back again to a galaxy far, far away as “Star Wars” returns to the big screen with “Star Wars: The Force Awakens.”</p>

<p>Episode VII in the Star Wars Saga, Star Wars: The Force Awakens, opens in cinemas December 17, 2015.</p>

<p>Official Site: <a href="http://starwarsunitedkingdom.co.uk">http://starwarsunitedkingdom.co.uk</a></p>

<p>Subscribe to Star Wars on YouTube for more videos: <a href="https://www.youtube.com/StarWarsUK">https://www.youtube.com/StarWarsUK</a>
Like Star Wars on Facebook: <a href="https://www.facebook.com/StarWars.UK">https://www.facebook.com/StarWars.UK</a>
Follow @StarWars on Twitter: @StarWarsUK
Follow @StarWars on Instagram: <a href="http://instagram.com/starwars">http://instagram.com/starwars</a>
Follow Star Wars on Tumblr: <a href="http://starwars.tumblr.com/">http://starwars.tumblr.com/</a></p>

<p>Star Wars: The Force Awakens, directed by J.J. Abrams from a screenplay by Lawrence Kasdan &amp; Abrams, features a cast including actors John Boyega, Daisy Ridley, Adam Driver, Oscar Isaac, Andy Serkis, Academy Award winner Lupita Nyong’o, Gwendoline Christie, Crystal Clarke, Pip Andersen, Domhnall Gleeson, and Max von Sydow. They will join the original stars of the saga, Harrison Ford, Carrie Fisher, Mark Hamill, Anthony Daniels, Peter Mayhew, and Kenny Baker.</p>

<p>The film is being produced by Kathleen Kennedy, J.J. Abrams, and Bryan Burk, and John Williams returns as the composer.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Osx 10.11 El Capitan, Which Mono Version?]]></title>
    <link href="http://sushihangover.github.io/osx-10-dot-11-el-capitan-which-mono-version/"/>
    <updated>2015-10-14T05:49:56-07:00</updated>
    <id>http://sushihangover.github.io/osx-10-dot-11-el-capitan-which-mono-version</id>
    <content type="html"><![CDATA[<p>Moving to El Capitan? Then you need <a href="http://www.mono-project.com/download/">Mono</a> version 4.2.x or 4.0.4.4.</p>

<p>From the Mono mailing list:</p>

<blockquote><p>What is the difference between the latest Mono 4.0.4.4 package for Mac and the 4.2.1 El Capitan Preview?
The changelog of 4.0.4.4 includes &ldquo;33585: El Capitan System Integrity
Protection support.&rdquo; so i suppose that the 4.0.4.4 also works on El
Capitan?.</p></blockquote>

<p>Reply from Miguel de Icaza:</p>

<blockquote><p>One is based on Mono 4.0 series, with minimal changes just to enable the support on El Capitan;   The 4.2 has the same changes, on top of the latest Mono 4.2, available on Alpha and the release candidate.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git Tags And Play Script]]></title>
    <link href="http://sushihangover.github.io/git-tags-and-playscript/"/>
    <updated>2015-09-02T21:47:36-07:00</updated>
    <id>http://sushihangover.github.io/git-tags-and-playscript</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://sushihangover.github.io/images/PlayscriptLogo_small.png"> Seems I not found a way to update the &lsquo;upstream&rsquo; master of <a href="https://github.com/PlayScriptRedux/playscript">PlayScript</a> without actually push the tag directly to the repo.</p>

<p>So first I de-reference the tags to get the matching commit SHA for the tag I need to push:</p>

<pre><code>git show-ref --tags --dereference | grep play
9e82533b52d5be2f10f8c0ddacff848810b8d736 refs/tags/play-3.10.0001
a317c758ea3136347c4bc2a360c34fbacfce6d34 refs/tags/play-3.2.7
a317c758ea3136347c4bc2a360c34fbacfce6d34 refs/tags/play-3.2.7001
e97e27071414fdafba9ce95d4b7ca6c0c6da2a3c refs/tags/play-3.4.1001
cfc55b6a587eba190042045e1a686388923310b0 refs/tags/play-3.6.1001
b509d6711135bfba5b32cf3f7e2090964c67daa0 refs/tags/play-3.8.1001
</code></pre>

<p>That is done on my fork of the <a href="https://github.com/sushihangover/playscript">PlayScript</a> repo as I try to never work directly on the &lsquo;upstream&rsquo; master.</p>

<p>So in the case of tag &ldquo;play-3.10.0001&rdquo; that is not in the upstream PlayScript repo, I need to add it to the repo.</p>

<p>I switch the PlayScriptRedux org&rsquo;s <a href="https://github.com/PlayScriptRedux/playscript">PlayScript</a> repo that I have a local clone of and update it.</p>

<p>First pull the latest changes, all done through pull-requests:</p>

<pre><code>git pull origin playscript
</code></pre>

<p>Now I can add the new tag:</p>

<pre><code>git tag play-3.10.0001 9e82533b52d5be2f10f8c0ddacff848810b8d736
</code></pre>

<p>And finally push it to the repo:</p>

<pre><code>git push origin play-3.10.0001

Total 0 (delta 0), reused 0 (delta 0)
To https://github.com/PlayScriptRedux/playscript.git
 * [new tag]         play-3.10.0001 -&gt; play-3.10.0001
</code></pre>

<p>I still want to know if this is available through pull-requests somehow.</p>

<p><img class="right" src="http://sushihangover.github.io/images/gitlogo.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git   Resetting A File Back To Its Conflicted State]]></title>
    <link href="http://sushihangover.github.io/git-resetting-a-file-back-to-its-conflicted-state/"/>
    <updated>2015-08-06T17:29:21-07:00</updated>
    <id>http://sushihangover.github.io/git-resetting-a-file-back-to-its-conflicted-state</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://sushihangover.github.io/images/gitlogo.png"> For some reason everytime I need to do this I forget the option. Maybe it is because the help for <em>git checkout &ndash;help</em> does not actually provide details for &ldquo;-m&rdquo; option.</p>

<p><code>git checkout -m &lt;filename&gt;
</code></p>

<p>This restores the unresolved state, including all information about parent and merge base, which allows restarting the resolution.</p>

<p>There is of course the <em>&ndash;theirs</em> and <em>&ndash;ours</em> options available during a checkout if a merge is underway, but those options are explained in the help and the name of the option is self-explanatory, but <strong>-m</strong> does not stick in my head for some reason&hellip;.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Play Script | Away3d Fire Demo With Scout]]></title>
    <link href="http://sushihangover.github.io/playscript-away3d-basic-shader/"/>
    <updated>2015-08-05T05:10:20-07:00</updated>
    <id>http://sushihangover.github.io/playscript-away3d-basic-shader</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://sushihangover.github.io/images/PlayscriptLogo_small.png"> This is the Away3d Fire example running via Mono and Xamarin Studio using the <a href="http://playscriptredux.github.io">PlayScript</a> compiler. <a href="https://github.com/playscriptredux/%0Aplayscript">Fork</a> me on github.</p>

<p><a href="https://github.com/PlayScriptRedux/away3d-examples-fp11/blob/playscript/src/Basic_Shading.as">Away3d example source code that is running in the demo</a></p>

<p>Using PlayScript Compiler 3.2.6002:</p>

<div class="ratio-4-3 embed-video-container" onclick="var myAnchor = document.getElementById('ym2w6rbYcAI');var tmpDiv = document.createElement('div');tmpDiv.innerHTML = '&lt;iframe style=&quot;vertical-align:top;width:100%;height:100%;position:absolute;&quot; src=&quot;http://www.youtube.com/embed/ym2w6rbYcAI?autoplay=1&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;';myAnchor.parentNode.replaceChild(tmpDiv.firstChild, myAnchor);return false;" title="click here to play">
<a class="youtube-lazy-link" style="width:100%;height:100%;background:#000 url(http://i2.ytimg.com/vi/ym2w6rbYcAI/0.jpg) center center no-repeat;background-size:contain;position:absolute" href="http://www.youtube.com/watch?v=ym2w6rbYcAI" id="ym2w6rbYcAI" onclick="return false;">
<div class="youtube-lazy-link-div"></div>
<div class="youtube-lazy-link-info">PlayScript - Away3d Basic Shading Demo</div>
</a>
<div class="video-info" >Xamarin Studio running the Away3d Basic Shading Demo using the PlayScript compiler

Using PlayScript v3.2.6002 

PlayScript @ http://playscriptredux.github.io

PlayScript Source Code @ https://github.com/playscriptredux

Blog @ http://sushihangover.github.io/

Royalty Free Background Music:
- “Across The Land" by MuLexic
- http://youtube.com/user/MuLexic</div>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Play Script | Linux Based Builds Now Available]]></title>
    <link href="http://sushihangover.github.io/playscript-linux-based-builds-now-avaiable/"/>
    <updated>2015-08-04T06:06:28-07:00</updated>
    <id>http://sushihangover.github.io/playscript-linux-based-builds-now-avaiable</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://sushihangover.github.io/images/PlayscriptLogo_small.png"> I have cleaned up issues for the Linux builds and they are now working properly. See the <strong>Travis CI</strong> files in the CI directory and the .travis.yml file in the root of the <a href="https://github.com/PlayScriptRedux/playscript">PlayScript</a> repo for details.</p>

<p><img class="right" src="http://blog.travis-ci.com/images/travis-mascot-200px.png"> <a href="http://travis-ci.org/">Travis CI </a> has also enabled OS-X builds for the PlayScript repo. Very cool company, great support and amazing that they offer this service for free to open source projects. They have a great company <a href="http://blog.travis-ci.com">blog</a> also&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Play Script | Away3d Fire Demo With Scout]]></title>
    <link href="http://sushihangover.github.io/playscript-away3d-firedemowithscout/"/>
    <updated>2015-08-03T16:12:50-07:00</updated>
    <id>http://sushihangover.github.io/playscript-away3d-firedemowithscout</id>
    <content type="html"><![CDATA[<p>This is the Away3d Fire example running via Mono and Xamarin Studio using the <a href="http://playscriptredux.github.io">PlayScript</a> compiler and using Adobe&rsquo;s <a href="http://www.adobe.com/devnet/scout.html">Scout</a> to profile it. <a href="https://github.com/playscriptredux/playscript">Fork</a> me on github.</p>

<div class="ratio-4-3 embed-video-container" onclick="var myAnchor = document.getElementById('-dVeQpB9BPo');var tmpDiv = document.createElement('div');tmpDiv.innerHTML = '&lt;iframe style=&quot;vertical-align:top;width:100%;height:100%;position:absolute;&quot; src=&quot;http://www.youtube.com/embed/-dVeQpB9BPo?autoplay=1&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;';myAnchor.parentNode.replaceChild(tmpDiv.firstChild, myAnchor);return false;" title="click here to play">
<a class="youtube-lazy-link" style="width:100%;height:100%;background:#000 url(http://i2.ytimg.com/vi/-dVeQpB9BPo/0.jpg) center center no-repeat;background-size:contain;position:absolute" href="http://www.youtube.com/watch?v=-dVeQpB9BPo" id="-dVeQpB9BPo" onclick="return false;">
<div class="youtube-lazy-link-div"></div>
<div class="youtube-lazy-link-info">PlayScript running Away3d Fire demo with Adobe Scout</div>
</a>
<div class="video-info" >Using PlayScript 3.2.6001, the Actionscript compiler for Mono, to compile and run the Away3d core and Basic_Fire demo within Xamarin Studio 5.9.x. You can see the MonoMac app connecting to Adobe Scout and sending  telemetry to profile the frames, traces, ActionScript events,  etc... More work needs to be done to make using Scout fully featured in profiling a PlayScript app, but this is a good start.

PlayScript @ http://playscriptredux.github.io

PlayScript Source Code @ https://github.com/playscriptredux

Blogging @ http://sushihangover.github.io/

Royalty Free Background Music:
- “Fog Rays" by MuLexic
- http://youtube.com/user/MuLexic</div>
</div>


<p><a href="https://github.com/PlayScriptRedux/away3d-examples-fp11/blob/playscript/src/Basic_Fire.as">Away3d example source code that is running in the demo</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Play Script | Travis Ci Enabled For Repo]]></title>
    <link href="http://sushihangover.github.io/playscript-travis-ci-enabled-for-repo/"/>
    <updated>2015-08-03T12:54:06-07:00</updated>
    <id>http://sushihangover.github.io/playscript-travis-ci-enabled-for-repo</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://sushihangover.github.io/images/PlayscriptLogo_small.png"> I have enabled Travis CI on the <a href="https://github.com/PlayScriptRedux/playscript">PlayScript</a> repo.</p>

<p>FYI: While the OS-X build is running fine, the linux build is failing as it has never really been tested (in the original Zngya release or The Redux version). This has been flagged as acceptable in Travis for now.</p>

<p> The CI builds are generously hosted and run on <a href="https://travis-ci.org/">Travis</a></p>

<p><img class="right" src="http://blog.travis-ci.com/images/travis-mascot-200px.png"></p>

<table>
<thead>
<tr>
<th style="text-align:center;">  Git Branch  </th>
<th style="text-align:center;">   Mac OS-X / Linux  </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;"> <strong><a href="https://github.com/PlayScriptRedux/playscript">playscript</a></strong> </td>
<td style="text-align:center;"> <a href="https://travis-ci.org/PlayScriptRedux/playscript/branches"><img src="https://travis-ci.org/PlayScriptRedux/playscript.svg?branch=playscript" alt="master nix" /></a> </td>
</tr>
</tbody>
</table>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Play Script | Away3d Particles With Play Script Logo]]></title>
    <link href="http://sushihangover.github.io/playscript-away3d-intermediate-playscript/"/>
    <updated>2015-07-29T17:05:50-07:00</updated>
    <id>http://sushihangover.github.io/playscript-away3d-intermediate-playscript</id>
    <content type="html"><![CDATA[<p>This demo uses the the Away3d Intermediate Particle Explosions example as a base, but I reworked it slightly to use the PlayScript logo. It is running via Mono and Xamarin Studio using the <a href="http://playscriptredux.github.io">PlayScript</a> compiler. <a href="https://github.com/playscriptredux/playscript">Fork</a> me on github.</p>

<div class="ratio-4-3 embed-video-container" onclick="var myAnchor = document.getElementById('uhjTZjlo5YA');var tmpDiv = document.createElement('div');tmpDiv.innerHTML = '&lt;iframe style=&quot;vertical-align:top;width:100%;height:100%;position:absolute;&quot; src=&quot;http://www.youtube.com/embed/uhjTZjlo5YA?autoplay=1&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;';myAnchor.parentNode.replaceChild(tmpDiv.firstChild, myAnchor);return false;" title="click here to play">
<a class="youtube-lazy-link" style="width:100%;height:100%;background:#000 url(http://i2.ytimg.com/vi/uhjTZjlo5YA/0.jpg) center center no-repeat;background-size:contain;position:absolute" href="http://www.youtube.com/watch?v=uhjTZjlo5YA" id="uhjTZjlo5YA" onclick="return false;">
<div class="youtube-lazy-link-div"></div>
<div class="youtube-lazy-link-info">Away3d Particle Explosions using the PlayScript logo</div>
</a>
<div class="video-info" >Using PlayScript 3.2.3001, the Actionscript compiler for Mono, to compile and run the Away3d core and Intermediate_PlayScriptParticleExplosion­s within Xamarin Studio 5.9.x
PlayScript @ http://playscriptredux.github.io

PlayScript Source Code @ https://github.com/playscriptredux

Blogging @ http://sushihangover.github.io/

Royalty Free Background Music:
- “Fog Rays" by MuLexic
- http://youtube.com/user/MuLexic</div>
</div>


<p><a href="https://github.com/PlayScriptRedux/away3d-examples-fp11/blob/playscript/src/Intermediate_PlayScriptParticleExplosions.as">Away3d example source code that is running in the demo</a></p>

<p>Previous Away3d example: <a href="http://sushihangover.github.io/playscript-away3d-intermediate-iparticle-explosions/">Play Script | Away3d World Global Example</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Play Script | Away3d Intermediate Particle Explosions]]></title>
    <link href="http://sushihangover.github.io/playscript-away3d-intermediate-iparticle-explosions/"/>
    <updated>2015-07-24T14:01:50-07:00</updated>
    <id>http://sushihangover.github.io/playscript-away3d-intermediate-iparticle-explosions</id>
    <content type="html"><![CDATA[<p>This is the Away3d Intermediate Particle Explosions example running via Mono and Xamarin Studio using the <a href="http://playscriptredux.github.io">PlayScript</a> compiler. <a href="https://github.com/playscriptredux/playscript">Fork</a> me on github.</p>

<div class="ratio-4-3 embed-video-container" onclick="var myAnchor = document.getElementById('KXi85ajraaM');var tmpDiv = document.createElement('div');tmpDiv.innerHTML = '&lt;iframe style=&quot;vertical-align:top;width:100%;height:100%;position:absolute;&quot; src=&quot;http://www.youtube.com/embed/KXi85ajraaM?autoplay=1&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;';myAnchor.parentNode.replaceChild(tmpDiv.firstChild, myAnchor);return false;" title="click here to play">
<a class="youtube-lazy-link" style="width:100%;height:100%;background:#000 url(http://i2.ytimg.com/vi/KXi85ajraaM/0.jpg) center center no-repeat;background-size:contain;position:absolute" href="http://www.youtube.com/watch?v=KXi85ajraaM" id="KXi85ajraaM" onclick="return false;">
<div class="youtube-lazy-link-div"></div>
<div class="youtube-lazy-link-info">Away3d Particle Explosions running in PlayScript</div>
</a>
<div class="video-info" >Using PlayScript, the Actionscript compiler for Mono, to compile and run the Away3d core and Intermediate_ParticleExplosions within Xamarin Studio 5.9.x
PlayScript @ http://playscriptredux.github.io

PlayScript Source Code @ https://github.com/playscriptredux

Blogging @ http://sushihangover.github.io/

Royalty Free Background Music:
-  "MuLexic & Nekihirst - Sapphire Shine" by MuLexic 
-   http://youtube.com/user/MuLexic</div>
</div>


<p><a href="https://github.com/PlayScriptRedux/away3d-examples-fp11/blob/playscript/src/Intermediate_ParticleExplosions.as">Away3d example source code that is running in the demo</a></p>

<p>Previous Away3d example: <a href="http://sushihangover.github.io/playscript-away3d-world-global-example/">Play Script | Away3d World Global Example</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xamarin | A Company With A Cool Dev Sense]]></title>
    <link href="http://sushihangover.github.io/xamarin-a-company-with-a-cool-dev-sense/"/>
    <updated>2015-07-23T21:49:16-07:00</updated>
    <id>http://sushihangover.github.io/xamarin-a-company-with-a-cool-dev-sense</id>
    <content type="html"><![CDATA[<p>Any <a href="http://xamarin.com/">company</a> that has a little fun with comments buried in html on their corporate web site to promote their job openings is all right by me :)</p>

<pre><code>    &lt;!--


          _      _ _       _     _         _                _                             _
         | |    | (_)     | |   | |       | |              | |                           (_)
       __| | ___| |_  __ _| |__ | |_    __| | _____   _____| | ___  _ __   ___ _ __ ___   _ ___
      / _` |/ _ \ | |/ _` | '_ \| __|  / _` |/ _ \ \ / / _ \ |/ _ \| '_ \ / _ \ '__/ __| | / __|
     | (_| |  __/ | | (_| | | | | |_  | (_| |  __/\ V /  __/ | (_) | |_) |  __/ |  \__ \ | \__ \
      \__,_|\___|_|_|\__, |_| |_|\__|  \__,_|\___| \_/ \___|_|\___/| .__/ \___|_|  |___/ |_|___/
                      __/ |                    _                   | |
                     |___/                    | |                  |_|
       ___  _   _ _ __   _ __ ___   __ _ _ __ | |_ _ __ __ _      ___ ___  _ __ ___   ___
      / _ \| | | | '__| | '_ ` _ \ / _` | '_ \| __| '__/ _` |    / __/ _ \| '_ ` _ \ / _ \
     | (_) | |_| | |    | | | | | | (_| | | | | |_| | | (_| |_  | (_| (_) | | | | | |  __/
      \___/ \__,_|_|    |_| |_| |_|\__,_|_| |_|\__|_|  \__,_(_)  \___\___/|_| |_| |_|\___|
                        _ _              _ _   _
                       (_) |            (_) | | |
      ___  __ _ _   _   _| |_  __      ___| |_| |__    _   _ ___
     / __|/ _` | | | | | | __| \ \ /\ / / | __| '_ \  | | | / __|
     \__ \ (_| | |_| | | | |_   \ V  V /| | |_| | | | | |_| \__ \_
     |___/\__,_|\__, | |_|\__|   \_/\_/ |_|\__|_| |_|  \__,_|___(_)
                 __/ |
                |___/


     xamarin.com/jobs



    --&gt;
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Play Script | Away3d World Global Example]]></title>
    <link href="http://sushihangover.github.io/playscript-away3d-world-global-example/"/>
    <updated>2015-07-23T18:17:12-07:00</updated>
    <id>http://sushihangover.github.io/playscript-away3d-world-global-example</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://sushihangover.github.io/images/PlayscriptLogo_small.png"></p>

<p>I finally got all the bits together to get the OS-X OpenGL version of the <a href="http://playscriptredux.github.io">PlayScript</a> flash stage running the <a href="http://away3d.com">Away3d</a> 3D engine.</p>

<p>500 ActionScript files with over 20000 lines of actual code from <a href="https://github.com/PlayScriptRedux/away3d-core-fp11">away3d-core-fp11</a> and <a href="https://github.com/PlayScriptRedux/away3d-examples-fp11">away3d-examples-fp11</a> compiled to <a href="https://en.wikipedia.org/wiki/Common_Intermediate_Language">CIL</a> using the PlayScript mcs compiler. :-)</p>

<div class="ratio-4-3 embed-video-container" onclick="var myAnchor = document.getElementById('XlC93cXRlgI');var tmpDiv = document.createElement('div');tmpDiv.innerHTML = '&lt;iframe style=&quot;vertical-align:top;width:100%;height:100%;position:absolute;&quot; src=&quot;http://www.youtube.com/embed/XlC93cXRlgI?autoplay=1&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;';myAnchor.parentNode.replaceChild(tmpDiv.firstChild, myAnchor);return false;" title="click here to play">
<a class="youtube-lazy-link" style="width:100%;height:100%;background:#000 url(http://i2.ytimg.com/vi/XlC93cXRlgI/0.jpg) center center no-repeat;background-size:contain;position:absolute" href="http://www.youtube.com/watch?v=XlC93cXRlgI" id="XlC93cXRlgI" onclick="return false;">
<div class="youtube-lazy-link-div"></div>
<div class="youtube-lazy-link-info">Away3d Globe example running in PlayScript</div>
</a>
<div class="video-info" >Using PlayScript, the Actionscript compiler for Mono, to compile and run the Away3d core and Intermediate_Globe example within Xamarin Studio 5.9.x
PlayScript @ http://playscriptredux.github.io

PlayScript Source Code @ https://github.com/playscriptredux

Blogging @ http://sushihangover.github.io/

Royalty Free Background Music by Origen from: http://www.origenmusic.com/origen-licensing.html</div>
</div>


<p><a href="https://github.com/PlayScriptRedux/away3d-examples-fp11/blob/playscript/src/Intermediate_Globe.as">Away3d example source code that is running in the demo</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt;cloc away3d-core-fp11
</span><span class='line'>     464 text files.
</span><span class='line'>     464 unique files.
</span><span class='line'>      16 files ignored.
</span><span class='line'>
</span><span class='line'>http://cloc.sourceforge.net v 1.62  T=3.45 s (130.1 files/s, 23410.8 lines/s)
</span><span class='line'>-------------------------------------------------------------------------------
</span><span class='line'>Language                     files          blank        comment           code
</span><span class='line'>-------------------------------------------------------------------------------
</span><span class='line'>ActionScript                   443          12601          12443          54059
</span><span class='line'>MSBuild script                   3              0              0           1551
</span><span class='line'>C#                               3             39             11            111
</span><span class='line'>-------------------------------------------------------------------------------
</span><span class='line'>SUM:                           449          12640          12454          55721
</span><span class='line'>-------------------------------------------------------------------------------
</span><span class='line'>&gt;cloc away3d-examples-fp11
</span><span class='line'>     110 text files.
</span><span class='line'>     109 unique files.
</span><span class='line'>      60 files ignored.
</span><span class='line'>
</span><span class='line'>http://cloc.sourceforge.net v 1.62  T=5.05 s (10.5 files/s, 3247.7 lines/s)
</span><span class='line'>-------------------------------------------------------------------------------
</span><span class='line'>Language                     files          blank        comment           code
</span><span class='line'>-------------------------------------------------------------------------------
</span><span class='line'>ActionScript                    36           1936           2592           8073
</span><span class='line'>Javascript                       2            121            148           1186
</span><span class='line'>MSBuild script                   3              0              0            808
</span><span class='line'>C#                               7            414             99            740
</span><span class='line'>XML                              2             19             10            105
</span><span class='line'>HTML                             2              7             29            102
</span><span class='line'>CSS                              1              1              1              4
</span><span class='line'>-------------------------------------------------------------------------------
</span><span class='line'>SUM:                            53           2498           2879          11018
</span><span class='line'>-------------------------------------------------------------------------------</span></code></pre></td></tr></table></div></figure>


<p>Note: <a href="http://www.telestream.net/screenflow/overview.htm">ScreenFlow</a> is running on the background so the world rotation is a little choppy at times, without the screen/video capture running, the example runs at 60 fps @ 4% CPU on this old MacBookPro with a Intel Core 2 Duo 2.53 GHz processor.</p>

<p>FYI: ScreenFlow is a <strong>must</strong> have if you are screen capturing video on OS-X. It really is the <em>bomb</em> at what it does.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xamarin Studio / Mono Develop   'unexpected Binary Element: 0' Build Failure]]></title>
    <link href="http://sushihangover.github.io/xamarin-studio-slash-monodevelop-unexpected-binary-element-0-build-failure/"/>
    <updated>2015-07-23T11:21:41-07:00</updated>
    <id>http://sushihangover.github.io/xamarin-studio-slash-monodevelop-unexpected-binary-element-0-build-failure</id>
    <content type="html"><![CDATA[<p>Getting an &lsquo;Unexpected binary element: 0&rsquo; when you are trying to build a project in Xamarin Studio / MonoDevelop? I found this when using a parallal mono install on OS-X and it seems others have also.</p>

<p>If you are also getting it build failure, please add your findings to:</p>

<p><a href="https://bugzilla.xamarin.com/show_bug.cgi?id=29958">Bug 29958 - Mono 4.0 - Causing &lsquo;Unexpected binary element: 0&rsquo; build failure when compiling against previous mono version</a></p>

<p>It appears not to be OS dependent either:</p>

<p><a href="http://stackoverflow.com/questions/31594099/building-empty-asp-net-project-in-monodevelop-xamarin-studio-generates-unexpe">Building empty ASP.NET project in MonoDevelop (Xamarin Studio) generates “Unexpected binary element: 0” error</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git   Squash Last X Commits Into One]]></title>
    <link href="http://sushihangover.github.io/git-squash-last-x-commits-into-one/"/>
    <updated>2015-07-17T10:35:06-07:00</updated>
    <id>http://sushihangover.github.io/git-squash-last-x-commits-into-one</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://sushihangover.github.io/images/gitlogo.png"></p>

<p>Use git rebase -i <after> and replace &ldquo;pick&rdquo; on the second and subsequent commits with &ldquo;squash&rdquo; or &ldquo;fixup&rdquo;, as described in the Git <a href="http://git-scm.com/docs/git-rebase#_interactive_mode">manual</a>.</p>

<p><after> is the commit after the last one that you wish squash together, i.e. parent of the oldest commit you want to squash.</p>

<p>Example:</p>

<p>You want to squash the last three commits into one, so lets look at the log to make sure that is want you want and to grab the commit SHA:</p>

<blockquote><p>git log -n 4 &ndash;pretty=oneline</p></blockquote>

<pre><code>f57f7f9c28646d5049aa6b90f33de23e1e53ad2e More test cleanups
07074c8058ed69224670987860c9db47858dab6e PlayScript compiler tests using a variant of compiler-tester
3b80dc06b990553042b4b0cde486e36522f4171b Remove .as/.play from mcs/tests These have been already moved to mcs/play_tests/[as|play] and intregrated into the mono compiler-tester (make [astest|playtest|playscript]
db6506ca17e49f0829ca9859a7994ddf840dbff4 * Tamarin-Redux Test Cleanup * Remove old Tamarin tests, the redux versions are the last released version
</code></pre>

<p>I want to squash the first three commits, so grab the forth SHA and:</p>

<blockquote><p>git rebase -i db6506ca17e49f0829ca9859a7994ddf840dbff4</p></blockquote>

<pre><code>pick 3b80dc0 Remove .as/.play from mcs/tests These have been already moved to mcs/play_tests/[as|play] and intregrated into the mono compiler-tester (make [astest|playtest|playscript]
pick 07074c8 PlayScript compiler tests using a variant of compiler-tester
pick f57f7f9 More test cleanups

# Rebase db6506c..f57f7f9 onto db6506c (3 command(s))
</code></pre>

<p>Following the directions in the commentted text. In this example: change the second and third items to squash:</p>

<pre><code>pick 3b80dc0 Remove .as/.play from mcs/tests These have been already moved to mcs/play_tests/[as|play] and intregrated into the mono compiler-tester (make [astest|playtest|playscript]
squash 07074c8 PlayScript compiler tests using a variant of compiler-tester
squash f57f7f9 More test cleanups

# Rebase db6506c..f57f7f9 onto db6506c (3 command(s))
</code></pre>

<p>Save those changes and exit the editor and the rebase will execute</p>

<pre><code>[detached HEAD ~~~
~~~
Successfully rebased and updated refs/heads/play-tests.
</code></pre>

<p>Confirm via:</p>

<blockquote><p>git log -n 2</p></blockquote>

<p>FYI: This is something you should do to your feature branch before pushing to your fork to make that <a href="http://github.com/playscriptredux/playscript">PlayScript</a> pull request. ;-)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Play Script : Tests Are Now Structured Like Mono's]]></title>
    <link href="http://sushihangover.github.io/playscript-tests-are-now-structured-like-monos/"/>
    <updated>2015-07-16T20:08:45-07:00</updated>
    <id>http://sushihangover.github.io/playscript-tests-are-now-structured-like-monos</id>
    <content type="html"><![CDATA[<p>I <a href="https://github.com/PlayScriptRedux/playscript/pull/8">moved all the .play and .as tests</a> under the play_test directory. They are in two separtate dirs now, <strong>play</strong> for the extended PlayScript language/format and <strong>as</strong> for the standard ActionScript tests.</p>

<p>In doing this and making them conform to how Mono&rsquo;s compiler tests are written and run, I ended up copying the tools/compiler-tester to tools/playc-tester. The number of changes I was making to the program seems out of place to keep in within Mono&rsquo;s version and long term this will keep up with trying to keep any changes to the actual Mono code base at a minimun to allow faster and cleaner merging of their master branch. This tool will have very little commit activity compared to the mcs.exe/playc.exe compilers.</p>

<h3>Playc-tester.exe</h3>

<pre><code>mono playc-tester.exe
PlayScript compiler tester, (C) 2009 Novell, Inc. (C) SushiHangover/RobertN
playc-tester -mode:[pos|neg] -compiler:FILE -files:file-list [options]

   -compiler:FILE   The file which will be used to compiler tests
   -compiler-options:OPTIONS  Add global compiler options
   -il:IL-FILE      XML file with expected IL details for each test
   -issues:FILE     The list of expected failures
   -log:FILE        Writes any output also to the file
   -help            Lists all options
   -mode:[pos|neg]  Specifies compiler test mode
   -safe-execution  Runs compiled executables in separate app-domain
   -update-il       Updates IL-FILE to match compiler output
   -update-ref      Updates the debug xml to match debug compiler mdb output
   -verbose         Prints more details during testing
</code></pre>

<p>Example test run of the current as tests:</p>

<pre><code>make astest
~~~
./as/test-debug-015.as...   NOT TESTED
./as/test-debug-AllowDynamics.as... KNOWN ISSUE (Execution error)
./as/test-debug-DivideByZeroTest.as...      KNOWN ISSUE (Compilation error)
./as/test-debug-UntypedVariableTest.as...   KNOWN ISSUE (Compilation error)
Done

40 test cases passed (93.02%)
1 test(s) ignored
3 known issue(s)
</code></pre>

<p>With these changes and the addition of the playshell REPL in the last set of changes will allow the Tamarin Redux tests to start coming online. Then CI deployment will be the step after that.</p>

<p>As always <a href="https://github.com/PlayScriptRedux/playscript/issues">post</a> any isses that you find. ;-)</p>
]]></content>
  </entry>
  
</feed>
